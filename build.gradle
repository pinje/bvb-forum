plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'org.sonarqube' version '3.0'
}

group = 'nl.fontys.s3'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-core:9.4.0'
    implementation 'org.flywaydb:flyway-mysql:9.4.0'
    implementation 'mysql:mysql-connector-java:8.0.30'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.10'
    implementation 'joda-time:joda-time:2.12.1'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.1.3'
    testImplementation 'com.playtika.testcontainers:embedded-mysql:2.2.5'
}

tasks.named('test') {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
    }
}
